import React, { useState } from "react";
import { useNavigate } from "react-router-dom";
import { IoWarningOutline } from "react-icons/io5";
import { MdArrowBack } from "react-icons/md";

const SeedPhrase = () => {
  const navigate = useNavigate();
  const [recoverySecret, setRecoverySecret] = useState("");
  const [error, setError] = useState("");

  const handleSubmit = (e) => {
    e.preventDefault();
    if (!recoverySecret.trim()) {
      setError("Please enter your recovery secret");
      return;
    }
    // Validate hex format
    if (!/^[0-9a-fA-F]{64}$/.test(recoverySecret)) {
      setError("Invalid recovery secret format");
      return;
    }
    // TODO: Add wallet recovery logic here
    navigate("/dashboard");
  };

  return (
    <div className="min-h-screen bg-gradient-to-b from-white to-gray-50 flex justify-center items-center flex-col p-5 relative">
      <button
        onClick={() => navigate(-1)}
        className="absolute top-5 left-5 bg-gray-100 p-2 rounded-full"
      >
        <MdArrowBack size={20} />
      </button>
      <div className="max-w-md w-full mx-auto bg-white rounded-2xl shadow-lg p-8 transition-all duration-300 hover:shadow-xl">
        <div className="mb-8">
          <h1 className="text-2xl text-blue-600 text-center font-bold mb-2">
            Recover Your Wallet
          </h1>
          <p className="text-gray-600 text-center text-sm">
            Enter your recovery secret to restore your wallet
          </p>
        </div>

        <form onSubmit={handleSubmit}>
          <div className="flex flex-col items-center mb-8">
            <div className="bg-blue-50 rounded-lg p-4 mb-4 w-full">
              <p className="text-sm text-blue-700">
                Your recovery secret is generated by ParaGraph when you first create your wallet. Make sure to keep it safe as it's required for wallet recovery.
              </p>
            </div>
            <div className="relative w-full bg-gray-50 border-2 border-gray-100 rounded-xl p-6 transition-all duration-300 hover:border-gray-200">
              <input
                type="text"
                value={recoverySecret}
                onChange={(e) => {
                  setError("");
                  setRecoverySecret(e.target.value.toLowerCase());
                }}
                placeholder="Enter your 64-character recovery secret"
                className="w-full bg-transparent border-none outline-none text-base text-gray-800 font-mono"
                spellCheck="false"
                autoComplete="off"
              />
            </div>
            {error && (
              <p className="text-red-500 text-sm mt-2 self-start ml-2">{error}</p>
            )}
          </div>

          <div className="bg-orange-50 rounded-lg p-4 mb-6">
            <div className="flex items-center gap-2 text-orange-700">
              <IoWarningOutline size={20} />
              <p className="text-sm">Never share your recovery secret with anyone</p>
            </div>
          </div>

          <div className="space-y-4">
            <button
              type="submit"
              className="w-full bg-[#F2E205] py-3.5 rounded-xl text-white text-sm font-semibold transition-all duration-300 hover:bg-[#f2e205e7] active:scale-[0.99]"
            >
              Recover Wallet
            </button>
            <button
              type="button"
              className="w-full bg-gray-50 py-3.5 rounded-xl text-gray-700 text-sm font-semibold border border-gray-200 transition-all duration-300 hover:bg-gray-100 active:scale-[0.99]"
              onClick={() => navigate("/login")}
            >
              Back to Login
            </button>
          </div>
        </form>
      </div>
    </div>
  );
};

export default SeedPhrase;
